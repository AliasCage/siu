/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 * Copyright (c) 2013, MPL CodeInside http://codeinside.ru
 */

package ru.codeinside.gses.webui.components;

import ru.codeinside.gses.webui.components.api.IRefresh;
import ru.codeinside.gses.webui.containers.LazyLoadingContainer;
import ru.codeinside.gses.webui.data.AbstractLazyLoadingQuery;
import ru.codeinside.gses.webui.utils.Components;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.themes.Reindeer;

public class BaseListUi<T> extends CustomComponent implements IRefresh {

	private static final long serialVersionUID = 2673892179689804419L;
	@AutoGenerated
	protected HorizontalLayout tabSheet;
	@AutoGenerated
	protected Table itemsTable;

	private AbstractLazyLoadingQuery<T> loadingQuery;

	public BaseListUi(AbstractLazyLoadingQuery<T> loadingQuery) {
		this.loadingQuery = loadingQuery;
		buildMainLayout();
		setCompositionRoot(tabSheet);
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		setSizeFull();
		tabSheet = new HorizontalLayout();
		tabSheet.setSizeFull();
		tabSheet.setStyleName(Reindeer.TABSHEET_MINIMAL);

		itemsTable = Components.createTable("900px", "500px");
		Container newDataSource = new LazyLoadingContainer(loadingQuery, 15);
		itemsTable.setContainerDataSource(newDataSource);

		tabSheet.addComponent(itemsTable);

		return tabSheet;
	}

	@Override
	public void refresh() {
		itemsTable.getContainerDataSource().removeAllItems();
		itemsTable.refreshRowCache();
	}

}
