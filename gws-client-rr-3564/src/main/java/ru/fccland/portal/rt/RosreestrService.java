
/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 * Copyright (c) 2013, MPL CodeInside http://codeinside.ru
 */

package ru.fccland.portal.rt;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "RosreestrService", targetNamespace = "http://portal.fccland.ru/rt/", wsdlLocation = "file:/home/vladimir/tmp/RRWsdl/RR.wsdl")
public class RosreestrService
    extends Service
{

    private final static URL ROSREESTRSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ru.fccland.portal.rt.RosreestrService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = ru.fccland.portal.rt.RosreestrService.class.getResource(".");
            url = new URL(baseUrl, "file:/home/vladimir/tmp/RRWsdl/RR.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/home/vladimir/tmp/RRWsdl/RR.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        ROSREESTRSERVICE_WSDL_LOCATION = url;
    }

    public RosreestrService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RosreestrService() {
        super(ROSREESTRSERVICE_WSDL_LOCATION, new QName("http://portal.fccland.ru/rt/", "RosreestrService"));
    }

    /**
     * 
     * @return
     *     returns RosreestrServicePortType
     */
    @WebEndpoint(name = "RosreestrServicePort")
    public RosreestrServicePortType getRosreestrServicePort() {
        return super.getPort(new QName("http://portal.fccland.ru/rt/", "RosreestrServicePort"), RosreestrServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RosreestrServicePortType
     */
    @WebEndpoint(name = "RosreestrServicePort")
    public RosreestrServicePortType getRosreestrServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://portal.fccland.ru/rt/", "RosreestrServicePort"), RosreestrServicePortType.class, features);
    }

}
